setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/10-AnaliseEstatistica3")
getwd()
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/10-AnaliseEstatistica3")
getwd()
install.packages("dplyr")
install.packages('nycflights13')
library('ggplot2')
library('dplyr')
library('nycflights13')
View(flights)
pop_data = na.omit(flights) %>%
filter(carrier == 'UA' | carrier =='DL', arr_delay >= 0) %>%
select(carrier, arr_delay) %>%
group_by(carrier) %>%
sample_n(17000) %>%
ungroup()
View(pop_data)
amostra1 = na.omit(flights) %>%
select(carrier, arr_delay) %>%
filter(carrier == 'DL') %>%
group_by(carrier) %>%
mutate(sample_id = '1') %>%
sample_n(17000)
amostra1 = na.omit(flights) %>%
select(carrier, arr_delay) %>%
filter(carrier == 'DL') %>%
group_by(carrier) %>%
mutate(sample_id = '1') %>%
sample_n(1000)
View(amostra1)
amostra1 = na.omit(flights) %>%
select(carrier, arr_delay) %>% # trazer as duas cols
filter(carrier == 'DL') %>% # filter p ter só a companhia D
mutate(sample_id = '1') %>% # add mais uma col cm valor 1
sample_n(1000)
amostra2 = na.omit(flights) %>%
select(carrier, arr_delay) %>% # trazer as duas cols
filter(carrier == 'UA') %>% # filter p ter só a companhia UA
mutate(sample_id = '2') %>% # add mais uma col cm valor 1
sample_n(1000)
View(amostra1)
amostra1 = na.omit(pop_data) %>%
select(carrier, arr_delay) %>% # trazer as duas cols
filter(carrier == 'DL') %>% # filter p ter só a companhia DL
mutate(sample_id = '1') %>% # add mais uma col cm valor 1
sample_n(1000)
View(amostra1)
amostra2 = na.omit(pop_data) %>%
select(carrier, arr_delay) %>% # trazer as duas cols
filter(carrier == 'UA') %>% # filter p ter só a companhia UA
mutate(sample_id = '2') %>% # add mais uma col cm valor 1
sample_n(1000)
View(amostra2)
samples = rbind(amostra1,amostra2)
View(samples)
erro_padrao_amostra1 = sd(amostra1$arr_delay) / sqrt(nrow(amostra1))
lower = mean(amostra1$arr_delay) - 1.96 * erro_padrao_amostra1
upper = mean(amostra1$arr_delay) + 1.96 * erro_padrao_amostra1
ic_1 = c(lower, upper)
mean(amostra1$arr_delay)
ic_1
erro_padrao_amostra2 = sd(amostra2$arr_delay) / sqrt(nrow(amostra2))
lower = mean(amostra2$arr_delay) - 1.96 * erro_padrao_amostra2
upper = mean(amostra2$arr_delay) + 1.96 * erro_padrao_amostra2
ic_2 = c(lower, upper)
mean(amostra2$arr_delay)
ic_2
ic_1 = c(lower, upper)
mean(amostra1$arr_delay)
ic_1
mean(amostra1$arr_delay)
mean(amostra2$arr_delay)
ic_2
toPlot = summarise(group_by(samples, sample_id), mean = mean(arr_delay))
toPlot = mutate(toPlot, lower = ifelse(toPlot$sample_id == 1, ic_1[1], ic_2[1]))
toPlot = mutate(toPlot, upper = ifelse(toPlot$sample_id == 1, ic_1[2], ic_2[2]))
ggplot(toPlot, aes(x = sample_id, y=mean, colour = sample_id )) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width=1)
toPlot = summarise(group_by(samples, sample_id), mean = mean(arr_delay))
toPlot = mutate(toPlot, lower = ifelse(toPlot$sample_id == 1, ic_1[1], ic_2[1]))
toPlot = mutate(toPlot, upper = ifelse(toPlot$sample_id == 1, ic_1[2], ic_2[2]))
ggplot(toPlot, aes(x = sample_id, y=mean, colour = sample_id )) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.1)
toPlot = summarise(group_by(samples, sample_id), mean = mean(arr_delay))
toPlot = mutate(toPlot, lower = ifelse(toPlot$sample_id == 1, ic_1[1], ic_2[1]))
toPlot = mutate(toPlot, upper = ifelse(toPlot$sample_id == 1, ic_1[2], ic_2[2]))
ggplot(toPlot, aes(x = sample_id, y=mean, colour = sample_id )) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.1)
ic_1 = c(lower, upper)
mean(amostra1$arr_delay) # esse é o valor da média de atraso!!!
ic_1 #intervalos de confiança
mean(amostra1$arr_delay) # esse é o valor da média de atraso!!! companhia DL
ic_1 #intervalos de confiança
mean(amostra2$arr_delay) # esse é o valor da média de atraso!!! companhia UA
ic_2 #intervalos de confiança
dl <- sample_n(filter(pop_data, carrier == "DL", arr_dalay > 0), 1000)
ua <- sample_n(filter(pop_data, carrier == "UA", arr_dalay > 0), 1000)
dl <- sample_n(filter(pop_data, carrier == "DL", arr_delay > 0), 1000)
ua <- sample_n(filter(pop_data, carrier == "UA", arr_delay > 0), 1000)
se = sd(dl$arr_delay) / sqrt(nrow(dl))
mean(dl$arr_delay)
lower = mean(dl$arr_delay) - 1.96 * se
upper = mean(dl$arr_delay) + 1.96 * se
ic_dl = c(lower, upper)
ic_dl
# Repete o processo para a outra companhia
se = sd(ua$arr_delay) / sqrt(nrow(ua))
mean(ua$arr_delay)
lower = mean(ua$arr_delay) - 1.96 * se
upper = mean(ua$arr_delay) + 1.96 * se
ic_ua = c(lower, upper)
ic_ua
t.test(dl$arr_delay, ua$arr_delay, alternative="greater")
