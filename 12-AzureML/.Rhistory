setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/11-MLemR")
2+2
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/11-MLemR")
getwd()
letters <- read.csv("letterdata.csv")
str(letters)
View(letters)
letters_treino <- letters[1:16000, ]
letters_teste  <- letters[16001:20000, ]
install.packages("kernlab")
library(kernlab)
letter_classifier <- ksvm(letter ~ ., data = letters_treino, kernel = "vanilladot")
letter_classifier
letter_predictions <- predict(letter_classifier, letters_teste)
head(letter_predictions)
table(letter_predictions, letters_teste$letter)
table(letter_predictions, letters_teste$letter)
table(letter_predictions, letters_teste$letter)
agreement <- letter_predictions == letters_teste$letter
table(agreement)
prop.table(table(agreement))
set.seed(12345)
letter_classifier_rbf <- ksvm(letter ~ ., data = letters_treino, kernel = "rbfdot")
letter_predictions_rbf <- predict(letter_classifier_rbf, letters_teste)
agreement_rbf <- letter_predictions_rbf == letters_teste$letter
table(agreement_rbf)
prop.table(table(agreement_rbf))
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/12-DataMungingAzure")
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/12-DataMungingAzure")
getwd()
install.packages('rpart')
library(rpart)
str(kyphosis)
head(kyphosis)
View(kyphosis)
?kyphosis
arvore <- rpart(Kyphosis ~ . , method = 'class', data = kyphosis)
class(arvore)
arvore
printcp(arvore)
plot(arvore, uniform = TRUE, main = "Arvore de Decisao em R")
text(arvore, use.n = TRUE, all = TRUE)
install.packages('rpart.plot')
library(rpart.plot)
prp(arvore)
getwd()
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/12-DataMungingAzure")
getwd()
library(datasets)
head(iris)
View(iris)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point(size = 3)
set.seed(101)
help(kmeans)
irisCluster <- kmeans(iris[, 1:4], 3, nstart = 20)
irisCluster
table(irisCluster$cluster, iris$Species)
irisCluster
install.packages("cluster")
library(cluster)
help(clusplot)
clusplot(iris, irisCluster$cluster, color = TRUE, shade = TRUE, labels = 0, lines = 0 )
