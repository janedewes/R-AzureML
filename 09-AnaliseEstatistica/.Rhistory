setwd("C:/Users/paloma/Desktop/GitHub/R-Projects/07-TrabPratico5")
setwd("C:/Users/paloma/Desktop/GitHub/R-Projects/07-TrabPratico5")
getwd()
install.packages("quantmod")
install.packages("xts")
install.packages("moments")
library(quantmod)
library(xts)
library(moments)
startDate = as.Date("2018-01-21")
endDate = as.Date("2018-06-21")
getSymbols("PETR4.SA", src = "yahoo", from = startDate, to = endDate, auto.assign = T)
class(PETR4.SA)
class(PETR4.SA)
is.xts(PETR4.SA)
head(PETR4.SA)
View(PETR4.SA)
PETR4.SA.Close <- PETR4.SA[, "PETR4.SA.Close"]
is.xts(PETR4.SA.Close)
head(Cl(PETR4.SA),5)
candleChart(PETR4.SA)
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobras",
col = "red", xlab = "Data", ylab = "Preço", major.ticks = 'months',
minor.ticks = FALSE)
addBBands(n = 20, sd = 2)
addBBands(n = 20, sd = 2)
addBBands(n = 20, sd = 2)
addADX(n = 11, maType = "EMA")
ETR4.SA.ret <- diff(log(PETR4.SA.Close), lag = 1)P
PETR4.SA.ret <- diff(log(PETR4.SA.Close), lag = 1)P
PETR4.SA.ret <- diff(log(PETR4.SA.Close), lag = 1)
PETR4.SA.ret <- PETR4.SA.ret[-1]
plot(PETR4.SA.ret, main = "Fechamento Diário das Ações da Petrobras",
col = "red", xlab = "Data", ylab = "Retorno", major.ticks = 'months',
minor.ticks = FALSE)
statNames <- c("Mean", "Standard Deviation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
View(PETRA.SA.ret)
View(PETR4.SA.ret)
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
PETR4.SA.stats <- c(mean(PETR4.SA.Close), sd(PETR4.SA.Close), skewness(PETR4.SA.Close), kurtosis(PETR4.SA.Close))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
statNames <- c("Mean", "Standard Deviation", "Skewness", "Kurtosis")
PETR4.SA.stats <- c(mean(PETR4.SA.ret), sd(PETR4.SA.ret), skewness(PETR4.SA.ret), kurtosis(PETR4.SA.ret))
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
View(PETR4.SA.ret)
summary(PETR4.SA.ret)
saveRDS(PETR4.SA, file = "PETR4.SA.rds")
Ptr = readRDS("PETR4.SA.rds")
dir()
head(Ptr)
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/07-ManipulacaoDeDadosR")
library(rvest)
library(rvest)
library(stringr)
library(tidyr)
pagina <- read_html("http://forecast.weather.gov/MapClick.php?lat=42.31674913306716&lon=-71.42487878862437&site=all&smap=1#.VRsEpZPF84I")
previsao <- html_nodes(pagina, "detailed-forecast-body b , .forecast-text")
previsao
texto <- html_text(previsao)
paste(texto, collapse = " ")
url <- 'http://espn.go.com/nfl/superbowl/history/winners'
pagina <- read_html(url)
tabela <- html_nodes(pagina, 'table')
class(table)
class(tabela)
tab <- html_table(tabela)[[1]]
class(tab)
head(tab)
View(tab)
tab <- tab[-(1:2), ]
head(tab)
names(tab) <- c("number", "date", "site", "result")
head(tab)
View(tab)
tab$date <- as.Date(tab$date, "%B. %d, %Y")
head(tab)
View(tab)
tab <- separate(tab, result, c('vencedor', 'perdedor'), sep = ', ', remove = TRUE)
head(tab)
View(tab)
pattern <- "\\d+$"
tab$pontosVencedor <- as.numeric(str_extract(tab$vencedor, pattern))
tab$pontosPerdedor <- as.numeric(str_extract(tab$perdedor, pattern))
tab$vencedor <- gsub(pattern, "", tab$vencedor)
tab$perdedor <- gsub(pattern, "", tab$perdedor)
head(tab)
View(tab)
write.csv(tab, "superbowl.csv", row.names = F)
dir()
get()
# --------------------------------------------------------------------------------------
# Exercício 8 - Divida as colunas em 4 colunas
# atualmente a col esta com os dois dados na mesma col
# fç separate é do pcte tidyr!!
tab <- separate(tab, result, c('vencedor', 'perdedor'), sep = ', ', remove = TRUE)
getwd()
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/09-AnaliseEstatistica")
setwd("C:/Users/paloma/Desktop/GitHub/R-Tools/09-AnaliseEstatistica")
getwd()
x = rnorm(1000, 3, .25)
hist(x, prob=TRUE, ylim = c(0,1.80), breaks = 20, main = "Histograma de x")
curve(dnorm(x,3,0.25), add = TRUE, col="red", lwd=1)
?rnorm
dbinom(7, 10, 0.8)
graph <- function(n,p){
x <- dbinom(0:n,size = n, prob = p)
barplot(x,ylim = c(0, 0.4), names.arg = 0:n,
main = sprintf(paste("Binomial Distribution(n,p) ", n.p,sep = ",")))
}
graph(10, 0.8)
graph <- function(n,p){
x <- dbinom(0:n, size = n, prob = p)
barplot(x,ylim = c(0, 0.4), names.arg = 0:n,
main = sprintf(paste('Binomial Distribution(n,p) ', n.p,sep = ",")))
}
graph(10, 0.8)
graph(10, 0.8)
graph(10, 0.8)
# Criar uma fç para ver todas as probabilidades:
graph <- function(n,p){
x <- dbinom(0:n, size = n, prob = p)
barplot(x,ylim = c(0, 0.4), names.arg = 0:n,
main = sprintf(paste('Binomial Distribution(n,p) ', n,p,sep = ",")))
}
graph(10, 0.8)
pnorm(84, mean = 72, sd = 15.2, lower.tail = FALSE)
pexp(2, rate=1/3)
runif(2, rate=1/3)
runif(10, min = 1, max = 3)
sessionInfo()
sessionInfo()
ppois(14, lambda = 12)
ppois(15, lambda = 12, lower=FALSE)
dbinom(4, size = 12, prob = 0.2)
dbinom(0, size = 12, prob = 0.2) +
dbinom(1, size = 12, prob = 0.2) +
dbinom(2, size = 12, prob = 0.2) +
dbinom(3, size = 12, prob = 0.2) +
dbinom(4, size = 12, prob = 0.2)
pbinom(4, size = 12, prob = 0.2)
